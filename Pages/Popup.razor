@inject IJSRuntime JS;
@inject PersonServices Service;

<div data-testid="SignupCta" class="sc-bdfBwQ sc-gsTCUz eebIWD bhdLno">
    <div id="cancel" class="sc-bdfBwQ sc-gsTCUz SignupCta__AnimatedPill-sc-1831vut-0 fjeJqU bhdLno bFYATv">
        <button type="button" height="100%" class="sc-pFZIQ cqNGIV">
            <div class="sc-bdfBwQ sc-gsTCUz dOtDFk bhdLno">
                <svg xmlns="http://www.w3.org/2000/svg"
                     viewBox="0 0 24 25" height="16px" aria-labelledby="title desc"
                     style="display: block; width: auto;">
                    <title>Linktree Logo</title><desc>Linktree Logo Symbol</desc><path d="M13.5108 5.85343L17.5158 1.73642L19.8404 4.11701L15.6393 8.12199H21.5488V11.4268H15.6113L19.8404 15.5345L17.5158 17.8684L11.7744 12.099L6.03299 17.8684L3.70842 15.5438L7.93745 11.4361H2V8.12199H7.90944L3.70842 4.11701L6.03299 1.73642L10.038 5.85343V0H13.5108V5.85343ZM10.038 16.16H13.5108V24.0019H10.038V16.16Z" fill="#FFFFFF"></path>
                </svg>
            <div class="sc-bdfBwQ ghpmkC">

                <a class="sc-hKgILt izSXmz" href="https://linktr.ee/" target="_blank">linktr.ee/YourNameHere</a>
            </div>
            </div>
            </button><button class="sc-pFZIQ hKHFyd" style="color: white" @onclick="(async() => await ToggleCancel())">X</button>
    </div>
</div>

@code {

    private async Task<string> ToggleCancel()
    {
        await JS.InvokeVoidAsync("AllMyLinks.logit", "ToggleCancel starting...");
        await JS.InvokeVoidAsync("AllMyLinks.toggleCancel");
        await InvokeAsync(StateHasChanged);
        await JS.InvokeVoidAsync("AllMyLinks.logit", "ToggleCancel done.");
        string result = string.Empty;
        try
        {
            result = await Service.InitAsync();
            await JS.InvokeVoidAsync("AllMyLinks.logit", "Success!!!");
        }
        catch (Exception e)
        {
            await JS.InvokeVoidAsync("AllMyLinks.logit", e.Message);
            await JS.InvokeVoidAsync("AllMyLinks.logit", result);
            if (e.InnerException is not null && e.InnerException.Message is not null)
                await JS.InvokeVoidAsync("AllMyLinks.logit", e.InnerException.Message);
        }

        return "finished...";
    }
}